// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// LineLoginClientInterface is an autogenerated mock type for the LineLoginClientInterface type
type LineLoginClientInterface struct {
	mock.Mock
}

// GetAccessTokenFromCode provides a mock function with given fields: code
func (_m *LineLoginClientInterface) GetAccessTokenFromCode(code string) (string, error) {
	ret := _m.Called(code)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(code)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(code)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetAccessTokenFromWebHook provides a mock function with given fields:
func (_m *LineLoginClientInterface) GetAccessTokenFromWebHook() (string, error) {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// LineAuth provides a mock function with given fields:
func (_m *LineLoginClientInterface) LineAuth() {
	_m.Called()
}

// VerifyAccessToken provides a mock function with given fields: accessToken
func (_m *LineLoginClientInterface) VerifyAccessToken(accessToken string) error {
	ret := _m.Called(accessToken)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(accessToken)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
